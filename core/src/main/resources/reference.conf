cassandra-journal {
  enable-events-by-tag-query = on
  max-result-size-replay = 500
}

cassandra-query-journal {
  refresh-interval = 50ms
}

aecor {
  aggregate {
    number-of-shards = 30
    ask-timeout = 60s
    default-idle-timeout = 120s
    idle-timeout {
      # per entity name idle timeout here
    }
  }
  process {
    number-of-shards = 30
    event-redelivery-interval = 5s
    delivery-timeout = 5s
    parallelism = 5
    default-idle-timeout = 10s
  }
}

akka {
  actor {
    serialization-identifiers {
      "aecor.core.aggregate.serialization.AggregateEventSerializer" = 100,
      "aecor.core.aggregate.serialization.AggregateCommandSerializer" = 101
    }
    serializers {
      persistent-entity-event-envelope = "aecor.core.aggregate.serialization.AggregateEventSerializer"
      aggregate-command = "aecor.core.aggregate.serialization.AggregateCommandSerializer"
    }
    serialization-bindings {
      "akka.actor.Identify" = akka-misc
      "akka.actor.ActorIdentity" = akka-misc
      "scala.Some" = akka-misc
      "scala.None$" = akka-misc
      "akka.dispatch.sysmsg.Watch" = java
      "aecor.core.process.ProcessStateChanged" = java
      "aecor.core.process.EventHandled" = java
      "java.io.Serializable" = none
      "java.lang.String" = java
      "aecor.core.aggregate.AggregateEvent" = persistent-entity-event-envelope
      "aecor.core.aggregate.AggregateCommand" = aggregate-command
    }
  }
  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }
}